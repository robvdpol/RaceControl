<UserControl
    x:Class="RaceControl.Views.VideoDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:RaceControl.Core.Converters;assembly=RaceControl.Core"
    xmlns:enums="clr-namespace:RaceControl.Common.Enums;assembly=RaceControl.Common"
    xmlns:fl="clr-namespace:FlyleafLib.Controls.WPF;assembly=FlyleafLib"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mvvm="clr-namespace:RaceControl.Core.Mvvm;assembly=RaceControl.Core"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <sys:Boolean x:Key="True">True</sys:Boolean>
        <sys:Boolean x:Key="False">False</sys:Boolean>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <core:AreEqualConverter x:Key="AreEqualConverter" />
        <core:LogicalOrConverter x:Key="LogicalOrConverter" />
        <core:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <core:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <core:ResizeModeToBooleanConverter x:Key="ResizeModeToBooleanConverter" />
        <core:DivideDoubleConverter x:Key="DivideDoubleConverter" />
        <core:TicksToTimeSpanConverter x:Key="TicksToTimeSpanConverter" />
        <Style x:Key="ControlBarButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="2" />
            <Setter Property="Width" Value="36" />
            <Setter Property="Height" Value="24" />
        </Style>
        <Style
            x:Key="ControlBarButtonStyleLarge"
            BasedOn="{StaticResource ControlBarButtonStyle}"
            TargetType="Button">
            <Setter Property="Height" Value="52" />
            <Setter Property="Width" Value="52" />
        </Style>
        <BitmapImage x:Key="PlayBitmapImage" UriSource="/Icons/play_48px.png" />
        <BitmapImage x:Key="PauseBitmapImage" UriSource="/Icons/pause_48px.png" />
        <BitmapImage x:Key="AudioBitmapImage" UriSource="/Icons/audio_48px.png" />
        <BitmapImage x:Key="NoAudioBitmapImage" UriSource="/Icons/no_audio_48px.png" />
        <BitmapImage x:Key="FastForward10BitmapImage" UriSource="/Icons/fast_forward_10_48px.png" />
        <BitmapImage x:Key="FastForward60BitmapImage" UriSource="/Icons/fast_forward_60_48px.png" />
        <BitmapImage x:Key="Rewind10BitmapImage" UriSource="/Icons/rewind_10_48px.png" />
        <BitmapImage x:Key="Rewind60BitmapImage" UriSource="/Icons/rewind_60_48px.png" />
        <BitmapImage x:Key="SynchronizeBitmapImage" UriSource="/Icons/synchronize_48px.png" />
        <BitmapImage x:Key="FullscreenBitmapImage" UriSource="/Icons/fullscreen_96px.png" />
        <BitmapImage x:Key="WindowedBitmapImage" UriSource="/Icons/windowed_96px.png" />
        <BitmapImage x:Key="LeftDownBitmapImage" UriSource="/Icons/left_down_48px.png" />
        <BitmapImage x:Key="LeftUpBitmapImage" UriSource="/Icons/left_up_48px.png" />
        <BitmapImage x:Key="RightDownBitmapImage" UriSource="/Icons/right_down_48px.png" />
        <BitmapImage x:Key="RightUpBitmapImage" UriSource="/Icons/right_up_48px.png" />
        <BitmapImage x:Key="ShutdownBitmapImage" UriSource="/Icons/shutdown_96px.png" />
        <Style x:Key="ChannelMenuItemContainerStyle" TargetType="MenuItem">
            <Setter Property="IsCheckable" Value="True" />
            <Setter Property="Header" Value="{Binding DisplayName}" />
            <Setter Property="Command" Value="{Binding DataContext.SelectChannelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
            <Setter Property="CommandParameter" Value="{Binding}" />
            <Setter Property="IsChecked" Value="False" />
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource AreEqualConverter}">
                            <Binding />
                            <Binding Path="DataContext.Channels.CurrentChannel" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="IsChecked" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <prism:Dialog.WindowStyle>
        <Style TargetType="Window">
            <Setter Property="prism:Dialog.WindowStartupLocation" Value="{Binding StartupLocation}" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="ResizeMode" Value="{Binding DialogSettings.ResizeMode}" />
            <Setter Property="Topmost" Value="{Binding DialogSettings.Topmost}" />
            <Setter Property="Top" Value="{Binding DialogSettings.Top, Mode=TwoWay}" />
            <Setter Property="Left" Value="{Binding DialogSettings.Left, Mode=TwoWay}" />
            <Setter Property="Width" Value="{Binding DialogSettings.Width, Mode=TwoWay}" />
            <Setter Property="Height" Value="{Binding DialogSettings.Height, Mode=TwoWay}" />
            <Setter Property="ShowInTaskbar" Value="True" />
        </Style>
    </prism:Dialog.WindowStyle>
    <fl:VideoView Player="{Binding MediaPlayer.Player}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--  Non-transparent background is required to capture mouse events  -->
            <Grid Grid.Row="0" Background="#01000000">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding MouseDownVideoCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseEnter">
                        <i:InvokeCommandAction Command="{Binding MouseEnterOrLeaveOrMoveVideoCommand}" CommandParameter="{StaticResource True}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding MouseEnterOrLeaveOrMoveVideoCommand}" CommandParameter="{StaticResource False}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <i:InvokeCommandAction Command="{Binding MouseEnterOrLeaveOrMoveVideoCommand}" CommandParameter="{x:Null}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseWheel">
                        <i:InvokeCommandAction Command="{Binding MouseWheelVideoCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid.Resources>
                    <!--  Needed for ContextMenu DataContext  -->
                    <mvvm:BindingProxy x:Key="Proxy" Data="{Binding}" />
                </Grid.Resources>
                <Grid.ContextMenu>
                    <ContextMenu DataContext="{Binding Data, Source={StaticResource Proxy}}" IsOpen="{Binding ContextMenuIsOpen}">
                        <MenuItem Header="Zoom">
                            <MenuItem Command="{Binding ZoomCommand}" Header="Zoom in">
                                <MenuItem.CommandParameter>
                                    <sys:Int32>50</sys:Int32>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding ZoomCommand}" Header="Zoom out">
                                <MenuItem.CommandParameter>
                                    <sys:Int32>-50</sys:Int32>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem
                                Command="{Binding ZoomCommand}"
                                CommandParameter="{x:Null}"
                                Header="Reset" />
                        </MenuItem>
                        <MenuItem Header="Aspect ratio" ItemsSource="{Binding MediaPlayer.AspectRatios}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="IsCheckable" Value="True" />
                                    <Setter Property="Header" Value="{Binding Description}" />
                                    <Setter Property="Command" Value="{Binding DataContext.SelectAspectRatioCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                    <Setter Property="IsChecked" Value="False" />
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource AreEqualConverter}">
                                                    <Binding />
                                                    <Binding Path="DataContext.MediaPlayer.AspectRatio" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="IsChecked" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <MenuItem Header="Audio Device" ItemsSource="{Binding MediaPlayer.AudioDevices}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="IsCheckable" Value="True" />
                                    <Setter Property="Header" Value="{Binding Description}" />
                                    <Setter Property="Command" Value="{Binding DataContext.SelectAudioDeviceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                    <Setter Property="IsChecked" Value="False" />
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource AreEqualConverter}">
                                                    <Binding />
                                                    <Binding Path="DataContext.MediaPlayer.AudioDevice" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="IsChecked" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="2x2 Layout">
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.TopLeft}"
                                Header="Top Left" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.TopRight}"
                                Header="Top Right" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.BottomLeft}"
                                Header="Bottom Left" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.BottomRight}"
                                Header="Bottom Right" />
                        </MenuItem>
                        <MenuItem Header="3x3 Layout">
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.TopLeftSmall}"
                                Header="Top Left" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.TopSmall}"
                                Header="Top" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.TopRightSmall}"
                                Header="Top Right" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.LeftSmall}"
                                Header="Left" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.CenterSmall}"
                                Header="Center" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.RightSmall}"
                                Header="Right" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.BottomLeftSmall}"
                                Header="Bottom Left" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.BottomSmall}"
                                Header="Bottom" />
                            <MenuItem
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.BottomRightSmall}"
                                Header="Bottom Right" />
                        </MenuItem>
                        <Separator />
	                <MenuItem Height="22" Header="Channel">
	                    <MenuItem Header="Globals" ItemsSource="{Binding Channels.Globals}" ItemContainerStyle="{StaticResource ChannelMenuItemContainerStyle}" />
	                    <MenuItem Header="Graphs" ItemsSource="{Binding Channels.Graphs}" ItemContainerStyle="{StaticResource ChannelMenuItemContainerStyle}" />
	                    <MenuItem Header="Onboards" ItemsSource="{Binding Channels.Onboards}" ItemContainerStyle="{StaticResource ChannelMenuItemContainerStyle}" />
	                </MenuItem>
                        <MenuItem Command="{Binding CloseWindowCommand}" Header="Close Player" />
                        <MenuItem Command="{Binding CloseAllWindowsCommand}" Header="Close All Players" />
                    </ContextMenu>
                </Grid.ContextMenu>
                <Label
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Content="{Binding Title}"
                    FontSize="22"
                    Foreground="White"
                    Visibility="{Binding ShowControls, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <Border
                Grid.Row="1"
                Height="Auto"
                BorderBrush="#ABADB3"
                BorderThickness="1"
                Visibility="{Binding ShowControls, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid Background="White">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter">
                            <i:InvokeCommandAction Command="{Binding MouseEnterControlBarCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave">
                            <i:InvokeCommandAction Command="{Binding MouseLeaveControlBarCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseMove">
                            <i:InvokeCommandAction Command="{Binding MouseMoveControlBarCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseWheel">
                            <i:InvokeCommandAction Command="{Binding MouseWheelControlBarCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Margin="3,2"
                            VerticalAlignment="Center"
                            Text="{Binding MediaPlayer.Time, StringFormat=hh\\:mm\\:ss, Converter={StaticResource TicksToTimeSpanConverter}}" />
                        <Slider
                            Grid.Column="1"
                            Margin="2"
                            IsEnabled="{Binding PlayableContent.IsLive, Converter={StaticResource InverseBooleanConverter}}"
                            IsMoveToPointEnabled="True"
                            IsSnapToTickEnabled="False"
                            Maximum="{Binding MediaPlayer.Duration}"
                            TickPlacement="BottomRight"
                            Value="{Binding MediaPlayer.Time}">
                            <Slider.TickFrequency>
                                <Binding Converter="{StaticResource DivideDoubleConverter}" Path="MediaPlayer.Duration">
                                    <Binding.ConverterParameter>
                                        <sys:Double>60</sys:Double>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Slider.TickFrequency>
                        </Slider>
                        <TextBlock
                            Grid.Column="2"
                            Margin="3,2"
                            VerticalAlignment="Center"
                            Text="{Binding MediaPlayer.Duration, StringFormat=hh\\:mm\\:ss, Converter={StaticResource TicksToTimeSpanConverter}}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlayableContent.IsLive}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock
                            Grid.Column="3"
                            Margin="5,2"
                            VerticalAlignment="Center"
                            Text="Volume" />
                        <Slider
                            Grid.Column="4"
                            Width="100"
                            Margin="2"
                            VerticalAlignment="Center"
                            IsMoveToPointEnabled="True"
                            IsSnapToTickEnabled="False"
                            Maximum="{Binding MediaPlayer.MaxVolume}"
                            TickFrequency="10"
                            TickPlacement="BottomRight"
                            Value="{Binding MediaPlayer.Volume}" />
                        <TextBlock
                            Grid.Column="5"
                            Width="30"
                            Margin="3,2"
                            VerticalAlignment="Center"
                            Text="{Binding MediaPlayer.Volume, StringFormat={}{0}%}" />
                    </Grid>
                    <Grid Grid.Row="1" Margin="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Row="0" Grid.Column="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <CheckBox
                                Grid.Column="0"
                                Margin="1,0"
                                VerticalAlignment="Center"
                                Content="Resizable window"
                                IsChecked="{Binding DialogSettings.ResizeMode, Converter={StaticResource ResizeModeToBooleanConverter}}"
                                IsEnabled="{Binding MediaPlayer.IsFullScreen, Converter={StaticResource InverseBooleanConverter}}" />
                            <CheckBox
                                Grid.Column="1"
                                Margin="4,0"
                                VerticalAlignment="Center"
                                Content="Always on top"
                                IsChecked="{Binding DialogSettings.Topmost}" />
                        </Grid>
                        <StackPanel
                            Grid.Row="1"
                            Grid.Column="0"
                            Orientation="Horizontal">
                            <Button Command="{Binding TogglePauseCommand}" ToolTip="Toggle pause">
                                <Button.Resources>
                                    <Image x:Key="PlayImage" Source="{StaticResource PlayBitmapImage}" />
                                    <Image x:Key="PauseImage" Source="{StaticResource PauseBitmapImage}" />
                                </Button.Resources>
                                <Button.Style>
                                    <Style BasedOn="{StaticResource ControlBarButtonStyle}" TargetType="Button">
                                        <Setter Property="Content" Value="{StaticResource PauseImage}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MediaPlayer.IsPaused}" Value="True">
                                                <Setter Property="Content" Value="{StaticResource PlayImage}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Command="{Binding ToggleMuteCommand}" ToolTip="Toggle mute">
                                <Button.Resources>
                                    <Image x:Key="AudioImage" Source="{StaticResource AudioBitmapImage}" />
                                    <Image x:Key="NoAudioImage" Source="{StaticResource NoAudioBitmapImage}" />
                                </Button.Resources>
                                <Button.Style>
                                    <Style BasedOn="{StaticResource ControlBarButtonStyle}" TargetType="Button">
                                        <Setter Property="Content" Value="{StaticResource AudioImage}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MediaPlayer.IsMuted}" Value="True">
                                                <Setter Property="Content" Value="{StaticResource NoAudioImage}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button
                                Command="{Binding FastForwardCommand}"
                                Style="{StaticResource ControlBarButtonStyle}"
                                ToolTip="Rewind one minute">
                                <Button.Content>
                                    <Image Source="{StaticResource Rewind60BitmapImage}" />
                                </Button.Content>
                                <Button.CommandParameter>
                                    <sys:Int32>-60</sys:Int32>
                                </Button.CommandParameter>
                            </Button>
                            <Button
                                Command="{Binding FastForwardCommand}"
                                Style="{StaticResource ControlBarButtonStyle}"
                                ToolTip="Rewind ten seconds">
                                <Button.Content>
                                    <Image Source="{StaticResource Rewind10BitmapImage}" />
                                </Button.Content>
                                <Button.CommandParameter>
                                    <sys:Int32>-10</sys:Int32>
                                </Button.CommandParameter>
                            </Button>
                            <Button
                                Command="{Binding FastForwardCommand}"
                                Style="{StaticResource ControlBarButtonStyle}"
                                ToolTip="Fast forward ten seconds">
                                <Button.Content>
                                    <Image Source="{StaticResource FastForward10BitmapImage}" />
                                </Button.Content>
                                <Button.CommandParameter>
                                    <sys:Int32>10</sys:Int32>
                                </Button.CommandParameter>
                            </Button>
                            <Button
                                Command="{Binding FastForwardCommand}"
                                Style="{StaticResource ControlBarButtonStyle}"
                                ToolTip="Fast forward one minute">
                                <Button.Content>
                                    <Image Source="{StaticResource FastForward60BitmapImage}" />
                                </Button.Content>
                                <Button.CommandParameter>
                                    <sys:Int32>60</sys:Int32>
                                </Button.CommandParameter>
                            </Button>
                            <Button
                                Command="{Binding SyncSessionCommand}"
                                Style="{StaticResource ControlBarButtonStyle}"
                                ToolTip="Synchronize playback across players *experimental*">
                                <Button.Content>
                                    <Image Source="{StaticResource SynchronizeBitmapImage}" />
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        <Grid
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            HorizontalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="0"
                                Command="{Binding ToggleFullScreenCommand}"
                                ToolTip="Toggle fullscreen mode">
                                <Button.Resources>
                                    <Image x:Key="FullscreenImage" Source="{StaticResource FullscreenBitmapImage}" />
                                    <Image x:Key="WindowedImage" Source="{StaticResource WindowedBitmapImage}" />
                                </Button.Resources>
                                <Button.Style>
                                    <Style BasedOn="{StaticResource ControlBarButtonStyleLarge}" TargetType="Button">
                                        <Setter Property="Content" Value="{StaticResource FullscreenImage}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MediaPlayer.IsFullScreen}" Value="True">
                                                <Setter Property="Content" Value="{StaticResource WindowedImage}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button
                                Grid.Row="0"
                                Grid.Column="1"
                                MinWidth="25"
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.TopLeft}"
                                Style="{StaticResource ControlBarButtonStyle}"
                                ToolTip="Move window to top left corner of current screen">
                                <Button.Content>
                                    <Image Source="{StaticResource LeftUpBitmapImage}" />
                                </Button.Content>
                            </Button>
                            <Button
                                Grid.Row="0"
                                Grid.Column="2"
                                MinWidth="25"
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.TopRight}"
                                Style="{StaticResource ControlBarButtonStyle}"
                                ToolTip="Move window to top right corner of current screen">
                                <Button.Content>
                                    <Image Source="{StaticResource RightUpBitmapImage}" />
                                </Button.Content>
                            </Button>
                            <Button
                                Grid.Row="1"
                                Grid.Column="1"
                                MinWidth="25"
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.BottomLeft}"
                                Style="{StaticResource ControlBarButtonStyle}"
                                ToolTip="Move window to bottom left corner of current screen">
                                <Button.Content>
                                    <Image Source="{StaticResource LeftDownBitmapImage}" />
                                </Button.Content>
                            </Button>
                            <Button
                                Grid.Row="1"
                                Grid.Column="2"
                                MinWidth="25"
                                Command="{Binding MoveToCornerCommand}"
                                CommandParameter="{x:Static enums:WindowLocation.BottomRight}"
                                Style="{StaticResource ControlBarButtonStyle}"
                                ToolTip="Move window to bottom right corner of current screen">
                                <Button.Content>
                                    <Image Source="{StaticResource RightDownBitmapImage}" />
                                </Button.Content>
                            </Button>
                            <Button
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="3"
                                Command="{Binding CloseWindowCommand}"
                                Style="{StaticResource ControlBarButtonStyleLarge}"
                                ToolTip="Close window">
                                <Button.Content>
                                    <Image Source="{StaticResource ShutdownBitmapImage}" />
                                </Button.Content>
                            </Button>
                        </Grid>
                        <Grid
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="5,2"
                                VerticalAlignment="Center"
                                Text="Video quality:" />
                            <ComboBox
                                Grid.Row="0"
                                Grid.Column="1"
                                MinWidth="150"
                                Margin="2"
                                DisplayMemberPath="Value"
                                ItemsSource="{Binding VideoQualities}"
                                SelectedValue="{Binding DialogSettings.VideoQuality}"
                                SelectedValuePath="Key">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding VideoQualitySelectionChangedCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ComboBox.IsEnabled>
                                    <MultiBinding Converter="{StaticResource LogicalOrConverter}">
                                        <Binding Path="MediaPlayer.IsPlaying" />
                                        <Binding Path="MediaPlayer.IsPaused" />
                                    </MultiBinding>
                                </ComboBox.IsEnabled>
                            </ComboBox>
                            <TextBlock
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="5,2"
                                VerticalAlignment="Center"
                                Text="Audio track:" />
                            <ComboBox
                                Grid.Row="1"
                                Grid.Column="1"
                                MinWidth="150"
                                Margin="2"
                                DisplayMemberPath="Name"
                                ItemsSource="{Binding MediaPlayer.AudioTracks}"
                                SelectedItem="{Binding MediaPlayer.AudioTrack}">
                                <ComboBox.IsEnabled>
                                    <MultiBinding Converter="{StaticResource LogicalOrConverter}">
                                        <Binding Path="MediaPlayer.IsPlaying" />
                                        <Binding Path="MediaPlayer.IsPaused" />
                                    </MultiBinding>
                                </ComboBox.IsEnabled>
                            </ComboBox>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </fl:VideoView>
</UserControl>